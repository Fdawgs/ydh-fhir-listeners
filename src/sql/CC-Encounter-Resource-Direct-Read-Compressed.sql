WITH encounter_CTE(encounterIdentifier, encounterClassDesc, encounterClassCode, encounterTypeDesc, encounterTypeCode, encounterPeriodStartDate, encounterPeriodStartTime, encounterPeriodEndDate, encounterPeriodEndTime, encounterHospitalizationAdmitsourceCodingCode, encounterHospitalizationAdmitsourceCodingDesc, encounterHospitalizationDischargedispositionCodingCode, encounterHospitalizationDischargedispositionCodingDesc, encounterAdmissionmethodCodingCode, encounterAdmissionmethodCodingDesc, encounterDischargemethodCodingCode, encounterDischargemethodCodingDesc, subjectReference, encounterStatus, lastUpdateDate, lastUpdateTime) AS (SELECT DISTINCT * FROM OPENQUERY([ENYH-PRD-ANALYTICS], 'SELECT REPLACE(app.APPT_RowId, ''||'', ''-'') AS encounterIdentifier, ''outpatient'' AS encounterClassDesc, NULL AS encounterClassCode, app.APPT_AS_ParRef->AS_RES_ParRef->RES_CTLOC_DR->CTLOC_Desc AS encounterTypeDesc, app.APPT_AS_ParRef->AS_RES_ParRef->RES_CTLOC_DR->CTLOC_Code AS encounterTypeCode, COALESCE(app.APPT_ArrivalDate, app.APPT_DateComp) AS encounterPeriodStartDate, COALESCE(app.APPT_ArrivalTime, app.APPT_TimeComp) AS encounterPeriodStartTime, NULL AS encounterPeriodEndDate, NULL AS encounterPeriodEndTime, NULL AS encounterHospitalizationAdmitsourceCodingCode, NULL AS encounterHospitalizationAdmitsourceCodingDesc, NULL AS encounterHospitalizationDischargedispositionCodingCode, NULL AS encounterHospitalizationDischargedispositionCodingDesc, NULL AS encounterAdmissionmethodCodingCode, NULL AS encounterAdmissionmethodCodingDesc, NULL AS encounterDischargemethodCodingCode, NULL AS encounterDischargemethodCodingDesc, app.APPT_Adm_DR->PAADM_PAPMI_DR->PAPMI_No AS subjectReference, app.APPT_Status AS encounterStatus, app.APPT_LastUpdateDate AS lastUpdateDate, NULL AS lastUpdateTime FROM RB_Appointment app WHERE " + params[0] + " AND app.APPT_Adm_DR->PAADM_PAPMI_DR->PAPMI_No IS NOT NULL ') UNION SELECT DISTINCT * FROM OPENQUERY([ENYH-PRD-ANALYTICS], 'SELECT REPLACE(PAADM_ADMNo, ''/'', ''-'') AS encounterIdentifier, CASE PAADM_Type WHEN ''I'' THEN ''inpatient'' WHEN ''E'' THEN ''emergency'' END as encounterClassDesc, CASE PAADM_Type WHEN ''I'' THEN ''IMP'' WHEN ''E'' THEN ''EMER'' END as encounterClassCode, PAADM_DepCode_DR->CTLOC_Desc AS encounterTypeDesc, PAADM_DepCode_DR->CTLOC_Code AS encounterTypeCode, PAADM_AdmDate AS encounterPeriodStartDate, PAADM_AdmTime AS encounterPeriodStartTime, PAADM_DischgDate AS encounterPeriodEndDate, PAADM_DischgTime AS encounterPeriodEndTime, PAADM_AdmSrc_DR->ADSOU_Code AS encounterHospitalizationAdmitsourceCodingCode, PAADM_AdmSrc_DR->ADSOU_Desc AS encounterHospitalizationAdmitsourceCodingDesc, PAADM_MainMRADM_DR->MRADM_DischDestin_DR->DDEST_Code AS encounterHospitalizationDischargedispositionCodingCode, PAADM_MainMRADM_DR->MRADM_DischDestin_DR->DDEST_Desc AS encounterHospitalizationDischargedispositionCodingDesc, PAADM_AdmMethod_DR->ADMETH_Code AS encounterAdmissionmethodCodingCode, PAADM_AdmMethod_DR->ADMETH_Desc AS encounterAdmissionmethodCodingDesc, PAADM_MainMRADM_DR->MRADM_ConditAtDisch_DR->DISCON_Code AS encounterDischargemethodCodingCode, PAADM_MainMRADM_DR->MRADM_ConditAtDisch_DR->DISCON_Desc AS encounterDischargemethodCodingDesc, PAADM_PAPMI_DR->PAPMI_No AS subjectReference, PAADM_VisitStatus AS encounterStatus, PAADM_UpdateDate AS lastUpdateDate, PAADM_UpdateTime AS lastUpdateTime FROM PA_Adm WHERE PAADM_Type IN (''I'', ''E'') AND " + params[1] + " AND PAADM_PAPMI_DR->PAPMI_No IS NOT NULL ')) SELECT  encounterIdentifier, CASE WHEN encounterStatus IN ('C', 'N', 'X', 'T', 'J', 'H') THEN 'cancelled' WHEN encounterStatus IN ('D', 'R') OR (encounterStatus IN ('A') AND encounterPeriodStartDate IS NOT NULL AND encounterPeriodEndDate IS NOT NULL) THEN 'finished' WHEN (encounterPeriodStartDate > CURRENT_TIMESTAMP AND encounterPeriodStartDate IS NOT NULL) OR encounterStatus IN ('P') THEN 'planned' WHEN encounterStatus IN ('A', 'S', 'W') THEN 'arrived' WHEN encounterPeriodStartDate IS NOT NULL AND encounterPeriodEndDate IS NULL THEN 'in-progress' ELSE 'unknown' END AS encounterStatusMapped, encounterStatus, encounterClassDesc, encounterClassCode, CASE WHEN ISNUMERIC(encounterTypeCode) <> 1 THEN NULL ELSE UPPER(encounterTypeDesc) END AS encounterTypeDesc, CASE WHEN ISNUMERIC(encounterTypeCode) <> 1 THEN NULL ELSE encounterTypeCode END AS encounterTypeCode, CONCAT(COALESCE(encounterPeriodStartDate, ''), 'T', COALESCE(encounterPeriodStartTime, '')) AS encounterPeriodStart, CONCAT(COALESCE(encounterPeriodEndDate, ''), 'T', COALESCE(encounterPeriodEndTime, '')) AS encounterPeriodEnd, consultants.dischargeConsultantCode AS encounterParticipantIndividualCode_discharging, consultants.dischargeConsultantDesc AS encounterParticipantIndividualDisplay_discharging, consultants.admissionConsultantCode AS encounterParticipantIndividualCode_admitting, consultants.admissionConsultantDesc AS encounterParticipantIndividualDesc_admitting, encounterHospitalizationAdmitsourceCodingCode, encounterHospitalizationAdmitsourceCodingDesc, encounterHospitalizationDischargedispositionCodingCode, encounterHospitalizationDischargedispositionCodingDesc, encounterAdmissionmethodCodingCode, encounterAdmissionmethodCodingDesc, encounterDischargemethodCodingCode, encounterDischargemethodCodingDesc, subjectReference, CONCAT(COALESCE(lastUpdateDate, ''), 'T', COALESCE(lastUpdateTime, '')) AS lastUpdated FROM encounter_CTE LEFT JOIN (SELECT * FROM (SELECT REPLACE(PAADM_ADMNo, '/', '-') AS PAADM_ADMNo, dischargeConsultantCode, dischargeConsultantDesc, admissionConsultantCode, admissionConsultantDesc, row_number() over (partition by PAADM_ADMNo order by TRANS_ChildSub)AS transOrder FROM OPENQUERY([ENYH-PRD-ANALYTICS], 'SELECT TOP 100 TRANS_ParRef->PAADM_AdmDocCodeDR->CTPCP_Code AS dischargeConsultantCode, TRANS_ParRef->PAADM_AdmDocCodeDR->CTPCP_Desc AS dischargeConsultantDesc, TRANS_CTCP_DR->CTPCP_Code AS admissionConsultantCode, TRANS_CTCP_DR->CTPCP_Desc AS admissionConsultantDesc, TRANS_ChildSub, TRANS_ParRef->PAADM_ADMNo FROM PA_AdmTransaction WHERE TRANS_ParRef->PAADM_Type = ''I'' AND TRANS_ParRef->PAADM_Epissubtype_DR->SUBT_Code = ''1'' AND TRANS_CTCP_DR IS NOT NULL AND " + params[2] + "') ) a WHERE transOrder = 1) consultants ON encounter_CTE.encounterIdentifier = consultants.PAADM_ADMNo;